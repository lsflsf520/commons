<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yisi.stiku.dbtest.dao.TestUserDao" >
  <resultMap id="BaseResultMap" type="com.yisi.stiku.dbtest.entity.TestUser" >
    <id column="sid" property="sid" jdbcType="INTEGER" />
    <result column="nick" property="nick" jdbcType="VARCHAR" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
  </resultMap>
  <sql id="BaseColumnList" >
    sid, nick, company, state
  </sql>
  <select id="findByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="BaseColumnList" />
    from test_user
    where sid = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPK" parameterType="java.lang.Integer" >
    delete from test_user
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yisi.stiku.dbtest.entity.TestUser" >
    insert into test_user (sid, nick, company, 
      state)
    values (#{sid,jdbcType=INTEGER}, #{nick,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT})
  </insert>
  <update id="updateByPK" parameterType="com.yisi.stiku.dbtest.entity.TestUser" >
    update test_user
    <set >
      <if test="nick != null" >
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>
  <insert id="insertReturnPK" useGeneratedKeys="true" keyProperty="sid" parameterType="com.yisi.stiku.dbtest.entity.TestUser" >
    insert into test_user (sid, nick, company, 
      state)
    values (#{sid,jdbcType=INTEGER}, #{nick,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT})
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into test_user
		(sid,nick,company,state)
	values 
	<foreach collection="list" item="item" separator="," index="index">
		(#{item.sid,jdbcType=INTEGER},#{item.nick,jdbcType=VARCHAR},#{item.company,jdbcType=VARCHAR},#{item.state,jdbcType=TINYINT})
	</foreach>
  </insert>
  <select id="findByPK_inMaster" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from test_user	where sid = #{pk, jdbcType=INTEGER}
  </select>
  <select id="getCntByPage" resultType="java.lang.Integer" >
    select 
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		count(1)
	from
		test_user
	<include refid="pageCondition" />
  </select>
  <select id="findAll" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from test_user
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByEntity" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from test_user
	<where>
		<trim suffixOverrides="and" >
			<if test="entity.sid != null" >
				and sid = #{entity.sid,jdbcType=INTEGER}
			</if>
			<if test="entity.nick != null" >
				and nick = #{entity.nick,jdbcType=VARCHAR}
			</if>
			<if test="entity.company != null" >
				and company = #{entity.company,jdbcType=VARCHAR}
			</if>
			<if test="entity.state != null" >
				and state = #{entity.state,jdbcType=TINYINT}
			</if>
		</trim>
	</where>
		<if test="orderBySql != null">
			${orderBySql}
		</if>
  </select>
  <select id="findByPage" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from test_user
		<include refid="pageCondition"/>
		<if test="pageInfo != null and pageInfo.orderBySql != null">
			${pageInfo.orderBySql}
		</if>
		<if test="pageInfo !=null">
			limit ${pageInfo.startIndex}, ${pageInfo.pagesize}
		</if>
  </select>
  <sql id="pageCondition" >
    <where >
      <trim suffixOverrides="and" >
        <if test="entity != null" >
          		<!-- 写where的判断条件,下边是样例
			<if test="entity.nick != null">
				and nick = #{entity.nick,jdbcType=VARCHAR}
			</if>
			<if test="entity.company != null">
				and company = '${entity.nick}'
			</if>
		-->
        </if>
        <if test="dynamicSql != null">
			and ${dynamicSql}
		</if>
      </trim>
    </where>
  </sql>
  
  <select id="loadBySid" resultMap="BaseResultMap" >
    select
		<if test="forceMaster">
			<![CDATA[/*master*/]]>
		</if>
		<include refid="BaseColumnList"/>
	from test_user
	where sid = #{sid,jdbcType=INTEGER}
  </select>
  
  <update id="updateCompany">
    update test_user set company = #{company, jdbcType=VARCHAR}
  </update>
</mapper>